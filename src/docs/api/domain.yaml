tags:
  - name: domain
    description: ' - Domain names that domains can use for email addresses'

components:
  schemas:
    domain:
      tags:
        - domain
      type: object
      properties:
        domain:
          type: string
          format: domain_name
        dns:
          type: object
          required: false
          properties:
            SPF:
              type: boolean
            DKIM:
              type: boolean
            RP:
              type: boolean
            MX:
              type: boolean
            ok:
              type: boolean
        setup:
          type: array
          required: false
          items:
            type: object
            properties:
              title:
                type: string
              type:
                type: string
              name:
                type: string
              content:
                type: string
              priority:
                type: integer
              label:
                type: string
              note:
                type: string
              ok:
                type: boolean
  examples:
    body:
      value:
        domain: domain@example.com
    success:
      value:
        success: true
    not_ok:
      value:
        domain: domain@example.com
        dns:
          SPF: false
          DKIM: false
          RP: false
          MX: false
          ok: false
    ok:
      value:
        domain: domain@example.com
        dns:
          SPF: true
          DKIM: true
          RP: true
          MX: true
          ok: true
    setup:
      value:
        domain: domain@example.com
        dns:
          SPF: false
          DKIM: false
          RP: false
          MX: false
          ok: false
        setup:
          - title: "SPF Record"
            type: "TXT"
            name: "@"
            content: "v=spf1 a mx include:spf.postal.anonacy.com ~all"
            priority: null
            label: "No SPF record exists for this domain"
            ok: false
            note: "You need to add a TXT record at the apex/root of your domain (@) with the following content. If you already send mail from another service, you may just need to add include:spf.postal.anonacy.com to your existing record."
          - title: "DKIM Record"
            type: "TXT"
            name: "postal-[KEY]._domainkey"
            content: "v=DKIM1; t=s; h=sha256; p=YOUR_DKIM_KEY;"
            priority: null
            label: "No TXT records were returned for postal-[KEY]._domainkey.test.anonacy.com"
            ok: false
            note: "You need to add a new TXT record with the name postal-[KEY]._domainkey with the following content."
          - title: "Return Path"
            type: "CNAME"
            name: "psrp"
            content: "rp.postal.anonacy.com"
            priority: null
            label: "There's no return path for this domain. This is OK but we recommend adding the record to improve deliverability and achieve DMARC alignment."
            ok: false
            note: "This is optional but we recommend adding this to improve deliverability. You should add a CNAME record at psrp.test.anonacy.com to point to the hostname below."
          - title: "MX Records"
            type: "MX"
            name: "@"
            content: "mx.postal.anonacy.com"
            priority: 10
            label: "None of the MX records for this domain point to us. Incoming mail won't be sent to us."
            ok: false
            note: "You need to add this MX record to your domain, otherwise routing will not work"

paths:
  /domains:
    get:
      tags:
        - domain
      summary: Gets all domains
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/domain'
              examples:
                not_ok:
                  $ref: '#/components/examples/not_ok'

  /domain:
    get:
      tags:
        - domain
      summary: Gets the dns setup details of a domain
      description: "USAGE: [GET] -> {api_url}/domain?domain={domain_name}<br><br>
        This endpoint provides information on how to setup DNS for a domain. The 'setup' object contains 4 records that need to be setup on your registrar for email forwarding to work.<br><br>
        1. SPF (TXT) Record<br>
        2. DKIM (TXT) Record<br>
        3. Return Path (CNAME) Record<br>
        4. MX (MX) Record<br><br>
        Make sure all of the steps are followed closely. Some records go at the domain root, others have different names (name). If the domain is a subdomain, root means the subdomain. You can requery this endpoint to check if the setup is correct."
      parameters:
        - in: query
          name: domain
          schema:
            type: string
          required: true
          description: The domain name
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
              examples:
                setup:
                  $ref: '#/components/examples/setup'
    post:
      tags:
        - domain
      summary: Creates a new domain
      description: "This adds a domain to mail server. The DNS of the domain needs to be setup afterwards. A subsequent GET request to /domain endpoint will provide records and instructions to activate the domain."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/domain'
            examples:
              body:
                $ref: '#/components/examples/body'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
              examples:
                not_ok:
                  $ref: '#/components/examples/not_ok'
                ok:
                  $ref: '#/components/examples/ok'

    delete:
      tags:
        - domain
      summary: Deletes an domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/domain'
            examples:
              body:
                $ref: '#/components/examples/body'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
              examples:
                success:
                  $ref: '#/components/examples/success'